{"ast":null,"code":"// import { Vue } from 'nuxt-property-decorator'\n// export default class extra extends Vue {\n//   // question = 'question goes here'\n//   answer = ''\n//   question = ''\n//   update = 0\n//   async clickQuestionButton () {\n//     console.log('in click question button')\n//     let number = this.$refs.number.value\n//     this.answer = ''\n//     this.$refs.category.textContent = ''\n//     this.$refs.answer.textContent = ''\n//     let url = ''\n//     if (number === '') {\n//       number = '1'\n//       url = 'https://jservice.io/api/random/?' + number + '?json'\n//     } else {\n//       url = 'https://jservice.io//api/category?id=' + number\n//       console.log('https://jservice.io//api/category?id=' + number)\n//     }\n//     try {\n//       let response = await fetch(url)\n//       response = await response.json()\n//       console.log('response.json: ', response)\n//       if (response.clues) {\n//         const randNum = Math.floor(Math.random() * response.clues.length)\n//         this.question = response.clues[randNum].question\n//         this.answer = response.clues[randNum].answer\n//         this.$refs.category.textContent = 'Category ID: ' + response.clues[randNum].category_id\n//       } else {\n//         this.question = response[0].question\n//         this.answer = response[0].answer\n//         this.$refs.category.textContent = response[0].category.id + ': ' + response[0].category.title\n//       }\n//       this.$refs.question.textContent = this.question\n//       console.log('question: ', this.question)\n//     } catch (e) {\n//       this.$refs.question.textContent = 'No questions found'\n//     }\n//   }\n//   clickAnswerButton () {\n//     this.$refs.answer.textContent = this.answer\n//   }\n// }","map":{"version":3,"mappings":"AA+CA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA","names":[],"sourceRoot":"","sources":["/var/home/huntermm18/the-byte-site/src/pages/extra.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <form>\n      Enter an ID number for your desired category, or leave blank for random<br>\n      <input ref=\"number\" placeholder=\"Category ID\">\n      <button @click.prevent=\"clickQuestionButton()\">\n        Get Question\n      </button>\n    </form>\n\n    <div class=\"second-box\">\n      <br>\n      <h3 ref=\"category\" />\n      <p id=\"question\" ref=\"question\" /><br>\n\n      <button @click.prevent=\"clickAnswerButton()\">\n        Get Answer\n      </button><br><br>\n      <p ref=\"answer\" />\n    </div><br><br>\n\n    <div class=\"third-box\">\n      <h1 id=\"idsaver\" />\n      <h2>Some category ID numbers:</h2>\n      <ul>\n        <li>Movies: 4</li>\n        <li>Magazines: 752</li>\n        <li>Stupid Answers: 136</li>\n        <li>Old Testiment Books: 7969</li>\n        <li>dictators & tyrants: 9238</li>\n        <li>economics: 761</li>\n        <li>you should know this: 17770</li>\n        <li>1960s broadway: 1329</li>\n        <li>antonyms: 1564</li>\n        <li>movies by cast: 16271</li>\n        <li>inventors: 1498</li>\n        <li>5-letter words: 139</li>\n        <li>chocolate: 212</li>\n        <li>familiar tv faces: 4769</li>\n        <li>spaced out: 5256</li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\n\n// import { Vue } from 'nuxt-property-decorator'\n\n// export default class extra extends Vue {\n//   // question = 'question goes here'\n//   answer = ''\n//   question = ''\n//   update = 0\n\n//   async clickQuestionButton () {\n//     console.log('in click question button')\n//     let number = this.$refs.number.value\n//     this.answer = ''\n//     this.$refs.category.textContent = ''\n//     this.$refs.answer.textContent = ''\n\n//     let url = ''\n//     if (number === '') {\n//       number = '1'\n//       url = 'https://jservice.io/api/random/?' + number + '?json'\n//     } else {\n//       url = 'https://jservice.io//api/category?id=' + number\n//       console.log('https://jservice.io//api/category?id=' + number)\n//     }\n\n//     try {\n//       let response = await fetch(url)\n//       response = await response.json()\n//       console.log('response.json: ', response)\n\n//       if (response.clues) {\n//         const randNum = Math.floor(Math.random() * response.clues.length)\n//         this.question = response.clues[randNum].question\n//         this.answer = response.clues[randNum].answer\n//         this.$refs.category.textContent = 'Category ID: ' + response.clues[randNum].category_id\n//       } else {\n//         this.question = response[0].question\n//         this.answer = response[0].answer\n//         this.$refs.category.textContent = response[0].category.id + ': ' + response[0].category.title\n//       }\n\n//       this.$refs.question.textContent = this.question\n//       console.log('question: ', this.question)\n//     } catch (e) {\n//       this.$refs.question.textContent = 'No questions found'\n//     }\n\n//   }\n\n//   clickAnswerButton () {\n//     this.$refs.answer.textContent = this.answer\n//   }\n// }\n</script>\n\n<style scoped>\n* {\n  text-align: center;\n  list-style: none;\n}\n\nbutton {\n  background-color: #4CAF50; /* Green */\n  border: none;\n  color: white;\n  padding: 10px 24px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n}\n\ninput {\n  margin: 14px;\n  outline-style: auto;\n}\n\n.container {\n  margin-top: 25px;\n}\n\n</style>\n"]},"metadata":{},"sourceType":"script"}