{"remainingRequest":"/home/huntermm18/museum-huntermm18/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/huntermm18/museum-huntermm18/front-end/src/views/Admin.vue?vue&type=style&index=0&id=54c38a05&scoped=true&lang=css&","dependencies":[{"path":"/home/huntermm18/museum-huntermm18/front-end/src/views/Admin.vue","mtime":1637630889016},{"path":"/home/huntermm18/museum-huntermm18/front-end/node_modules/css-loader/dist/cjs.js","mtime":1637614446869},{"path":"/home/huntermm18/museum-huntermm18/front-end/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1637614449509},{"path":"/home/huntermm18/museum-huntermm18/front-end/node_modules/postcss-loader/src/index.js","mtime":1637614447733},{"path":"/home/huntermm18/museum-huntermm18/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1637614445069},{"path":"/home/huntermm18/museum-huntermm18/front-end/node_modules/vue-loader/lib/index.js","mtime":1637614448621}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaW1hZ2UgaDIgewogIGZvbnQtc3R5bGU6IGl0YWxpYzsKICBmb250LXNpemU6IDFlbTsKfQoKLmhlYWRpbmcgewogIGRpc3BsYXk6IGZsZXg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKICBtYXJnaW4tdG9wOiAyMHB4Owp9CgouaGVhZGluZyBoMiB7CiAgbWFyZ2luLXRvcDogOHB4OwogIG1hcmdpbi1sZWZ0OiAxMHB4Owp9CgouYWRkLAouZWRpdCB7CiAgZGlzcGxheTogZmxleDsKfQoKLmNpcmNsZSB7CiAgYm9yZGVyLXJhZGl1czogNTAlOwogIHdpZHRoOiAxOHB4OwogIGhlaWdodDogMThweDsKICBwYWRkaW5nOiA4cHg7CiAgYmFja2dyb3VuZDogIzMzMzsKICBjb2xvcjogI2ZmZjsKICB0ZXh0LWFsaWduOiBjZW50ZXIKfQoKLyogRm9ybSAqLwppbnB1dCwKdGV4dGFyZWEsCnNlbGVjdCwKYnV0dG9uIHsKICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMWVtOwp9CgouZm9ybSB7CiAgbWFyZ2luLXJpZ2h0OiA1MHB4Owp9CgovKiBVcGxvYWRlZCBpbWFnZXMgKi8KLnVwbG9hZCBoMiB7CiAgbWFyZ2luOiAwcHg7Cn0KCi51cGxvYWQgaW1nIHsKICBtYXgtd2lkdGg6IDMwMHB4Owp9CgoqIHsKICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7IC8qIGtlZXAgbmV3bGluZXMgb24gcmVjaXBlIGlucHV0ICovCn0KYnV0dG9uIHsKICBtYXJnaW46IDdweDsKfQo="},{"version":3,"sources":["Admin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8JA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Admin.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<div class=\"admin\">\n    <h1>Add or Edit The Recipe Library</h1>\n    <div class=\"heading\">\n      <div class=\"circle\">1</div>\n      <h2>Add a Recipe</h2>\n    </div>\n    <div class=\"add\">\n      <div class=\"form\">\n        <input v-model=\"title\" placeholder=\"Title\"><br><br>\n        <input v-model=\"imageLink\" placeholder=\"image url\"><br>\n        <p></p>\n        <textarea v-model=\"recipeBody\" rows = \"12\" cols = \"70\" name = \"recipeBody\">\n            Enter recipe here...\n         </textarea><br>\n        <button @click=\"upload\">Upload</button>\n      </div>\n      <div class=\"upload\" v-if=\"addItem\">\n        <h2>Uploaded: {{addItem.title}}</h2>\n        <img :src=\"addItem.imageLink\" />\n      </div>\n    </div>\n\n\n<div class=\"heading\">\n      <div class=\"circle\">2</div>\n      <h2>Edit/Delete an Item</h2>\n    </div>\n    <div class=\"edit\">\n      <div class=\"form\">\n        <input v-model=\"findTitle\" placeholder=\"Search\">\n        <div class=\"suggestions\" v-if=\"suggestions.length > 0\">\n          <div class=\"suggestion\" v-for=\"s in suggestions\" :key=\"s.id\" @click=\"selectItem(s)\">{{s.title}}\n          </div>\n        </div>\n      </div>\n      <div class=\"upload\" v-if=\"findItem\">\n        <input v-model=\"findItem.title\"><br><br>\n        <input v-model=\"findItem.imageLink\"><br>\n        <p> {{findItem.recipeBody}}  </p>\n        <img :src=\"findItem.imageLink\"/><br>\n        <i>enter updated recipe</i><br>\n        <textarea v-model=\"findItem.recipeBody\" rows = \"9\" cols = \"50\" name = \"recipeBody\">\n            \n         </textarea><br>\n        <button @click=\"deleteItem(findItem)\">Delete</button>\n        <button @click=\"editItem(findItem)\">Update Recipe</button>\n      </div>\n\n    </div>\n\n\n</div>\n</template>\n\n\n<script>\nimport axios from 'axios';\nexport default {\n  name: 'Admin',\n  data() {\n    return {\n      title: \"\",\n      recipeBody: \"\",\n      addItem: null,\n      items: [],\n      findTitle: \"\",\n      findItem: null,\n\n    }\n  },\n\n  created() {\n    this.getItems();\n  },\n\n  computed: {\n    suggestions() {\n      let items = this.items.filter(item => item.title.toLowerCase().startsWith(this.findTitle.toLowerCase()));\n      return items.sort((a, b) => a.title > b.title);\n    }\n  },\n\n\n  methods: {\n    selectItem(item) {\n      this.findTitle = \"\";\n      this.findItem = item;\n    },\n\n    async deleteItem(item) {\n      try {\n        await axios.delete(\"/api/items/\" + item._id);\n        this.findItem = null;\n        this.getItems();\n        return true;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async editItem(item) {\n      try {\n        await axios.put(\"/api/items/\" + item._id, {\n          title: this.findItem.title,\n          imageLink: this.findItem.imageLink,\n          //description: this.findItem.description,\n          recipeBody: this.findItem.recipeBody,\n        });\n        this.findItem = null;\n        this.getItems();\n        return true;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n\n    async getItems() {\n      try {\n        let response = await axios.get(\"/api/items\");\n        this.items = response.data;\n        return true;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n\n    fileChanged(event) {\n      this.file = event.target.files[0]\n    },\n\n    async upload() {\n      try {\n        //const formData = new FormData();\n        //formData.append('photo', this.file, this.file.name)\n        //let r1 = await axios.post('/api/photos', formData);\n        let r2 = await axios.post('/api/items', {\n          title: this.title,\n          //path: r1.data.path,\n          //description: this.description,\n          recipeBody: this.recipeBody,\n          imageLink: this.imageLink,\n        });\n        this.addItem = r2.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n}\n</script>\n\n\n\n\n<style scoped>\n.image h2 {\n  font-style: italic;\n  font-size: 1em;\n}\n\n.heading {\n  display: flex;\n  margin-bottom: 20px;\n  margin-top: 20px;\n}\n\n.heading h2 {\n  margin-top: 8px;\n  margin-left: 10px;\n}\n\n.add,\n.edit {\n  display: flex;\n}\n\n.circle {\n  border-radius: 50%;\n  width: 18px;\n  height: 18px;\n  padding: 8px;\n  background: #333;\n  color: #fff;\n  text-align: center\n}\n\n/* Form */\ninput,\ntextarea,\nselect,\nbutton {\n  font-family: 'Montserrat', sans-serif;\n  font-size: 1em;\n}\n\n.form {\n  margin-right: 50px;\n}\n\n/* Uploaded images */\n.upload h2 {\n  margin: 0px;\n}\n\n.upload img {\n  max-width: 300px;\n}\n\n* {\n  white-space: pre-wrap; /* keep newlines on recipe input */\n}\nbutton {\n  margin: 7px;\n}\n</style>\n"]}]}